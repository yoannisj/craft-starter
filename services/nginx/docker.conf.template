# https://mattgrayisok.com/a-craft-cms-development-workflow-with-docker-part-1-local-development
# https://mattgrayisok.com/craft-cms-in-docker-https-ftw

server {

    listen 80; # http requests
    server_name ${WEB_HOSTNAME};

    # =HSTS: Comment out one of the two blocks below
    # A. redirect all incoming requests to https://
    location / {
        return 301 https://$host$request_uri;
    }

    # B. or handle incoming requests over http://
    # include /etc/nginx/conf.d/includes/main.conf;
}

server {

    # use SSL
    listen [::]:443 ssl http2; # https requests, ipv6
    listen 443 default_server ssl http2; # https requests, ipv4
    server_name ${WEB_HOSTNAME};

    ssl_certificate_key  /etc/nginx/ssl/private.key;
    ssl_certificate      /etc/nginx/ssl/public.crt;
    ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers                ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:AES128:AES256:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK;
    ssl_prefer_server_ciphers  on;

    # handle incoming requests
    include /etc/nginx/conf.d/includes/main.conf;
}
