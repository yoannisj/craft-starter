# @see https://mattgrayisok.com/a-craft-cms-development-workflow-with-docker-part-1-local-development
# @see https://mattgrayisok.com/craft-cms-in-docker-https-ftw
# @see https://github.com/nystudio107/craft/blob/craft-webpack/docker-config/nginx/default.conf

server {

    listen ${WEB_PORT_UNSECURE}; # http requests
    server_name ${WEB_HOSTNAME};

    # redirect all incoming requests to https:// (HSTS)
    location / {
        return 301 https://${WEB_HOSTNAME}:${WEB_PORT}$request_uri;
    }
}

server {

    listen [::]:${WEB_PORT} ssl http2; # https requests, ipv6
    listen ${WEB_PORT} default_server ssl http2; # https requests, ipv4
    server_name ${WEB_HOSTNAME};

    ssl_certificate_key        /etc/nginx/ssl/private.key;
    ssl_certificate            /etc/nginx/ssl/public.crt;
    ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers                ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:AES128:AES256:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK;
    ssl_prefer_server_ciphers  on;

    root ${WEB_ROOT};
    index index.html index.php;
    charset utf-8;

    # =Logs
    access_log off;
    error_log  /var/log/nginx/error.log debug;

    # =ERRORS
    error_page 404 /index.php?$query_string;

    # =Files
    sendfile off;
    client_max_body_size '20M'; # limit body of incoming HTTP requests (affects file-size for file uploads)

    # =Compression
    include /etc/nginx/conf.d/includes/compression.conf;

    # =Static
    # Check request path against static files
    location / {
        # load project's own security headers
        # include /etc/nginx/conf.d/includes/security.conf;

        # `$uri` matches /assets/main.css with /assets/main.css
        # `$uri/` matches /articles with /articles/index.html
        try_files $uri $uri/ /index.php?$query_string;
    }

    # =Dynamic
    # Match against /**/*.php requests
    location ~ [^/]\.php(/|$) {
        # load project's own security headers
        include /etc/nginx/conf.d/includes/security.conf;

        # `$uri` matches /assets/main.css with /assets/main.css
        # `$uri/` matches /articles with /articles/index.html
        try_files $uri $uri/ /index.php?$query_string;

        # Pass requests to php files to FastCGI (on the craft container)
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass craft-web:9000;
        fastcgi_index index.php;

        # Pass parameters to FastCGI
        include fastcgi_params; # load default FastCGI parameters provided by nginx
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param HTTP_PROXY "";

        add_header Last-Modified $date_gmt;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        if_modified_since off;
        expires off;
        etag off;

        fastcgi_intercept_errors off;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
    }

    # =Forbidden
    # deny access for all requests starting with '.ht'
    location ~ /\.ht {
        deny all;
    }
}
