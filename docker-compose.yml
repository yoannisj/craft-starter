# @see https://docs.docker.com/compose/compose-file/compose-file-v3/
version: '3.7'
services:
  nginx:
    image: yoannisj/craft-nginx:latest
    build:
      dockerfile: ./docker/nginx/Dockerfile
      context: .
    env_file:
      # load environment variables from files listed below into Dockerfile and containers
      # @note environment variables in files lower down the list override values from previous files
      # @note variables defined in the service's 'environment' key override values from files
      - .env
    volumes:
      # we serve public static files via nginx directly
      - ./web:/var/www/html/web
    init: true # enables improved process management
    networks:
      - webnet # add service to the internal 'webnet' network (see 'networks' key below)
    ports:
      - ${PUBLIC_WEB_PORT:-80}:80
      - ${PUBLIC_WEB_PORT_SECURE:-443}:443
    depends_on:
      - php-web
  php-web:
    image: yoannisj/craft-php:latest
    build: &php-build
      dockerfile: ./docker/php/Dockerfile
      context: .
    env_file:
      - .env
    volumes: &php-volumes
      - ./web:/var/www/html/web
      - ./craftcms/config:/var/www/html/craftcms/config
      - ./craftcms/modules:/var/www/html/craftcms/modules
      - ./craftcms/storage/backups:/var/www/html/craftcms/storage/backups
      - ./craftcms/templates:/var/www/html/craftcms/templates
      - ./vendor:/var/www/html/vendor
      - ./composer.json:/var/www/html/composer.json
      - ./composer.lock:/var/www/html/composer.lock
    init: true # enables improved process management
    networks:
      - webnet # add service to the internal 'webnet' network (see 'networks' key below)
    expose:
      - 9000 # expose to internal networks via port 9000
    depends_on:
      - mariadb
      - redis
  php-worker:
    image: yoannisj/craft-php:latest
    build:
      *php-build
    env_file:
      - .env
    volumes:
      *php-volumes
    init: true # enables improved process management
    networks:
      - webnet # add service to the internal 'webnet' network (see 'networks' key below)
    expose:
      - 9001 # expose to internal networks via port 9001
    command: ["./craft", "queue/listen"]
    depends_on:
      - mariadb
      - redis
  mariadb:
    image: yoannisj/craft-mariadb:latest
    build:
      dockerfile: ./docker/mariadb/Dockerfile
      context: .
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD:-secret}
      MYSQL_DATABASE: ${DATABASE_NAME:-craftcms}
      MYSQL_USER: ${DATABASE_USER:-craftcms}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD:-secret}
    volumes:
      - dbdata:/var/lib/mysql
    init: true # enables improved process management
    networks:
      - webnet # add service to the internal 'webnet' network (see 'networks' key below)
    ports:
      - ${PUBLIC_DATABASE_PORT:-3306}:3306
  redis:
    image: yoannisj/craft-redis:latest
    build:
      dockerfile: ./docker/redis/Dockerfile
      context: .
    init: true
    networks:
      - webnet
    ports:
      - ${PUBLIC_REDIS_PORT:-6379}:6379
volumes:
  # we use named volumes to share and persist files and data across services, but without maintaining them as part of the project
  # those volumes are stored internally by docker
  dbdata:
    driver: local
networks:
  # create internal network called 'webnet' which used the default network driver 'bridge'
  webnet:
    driver: bridge
