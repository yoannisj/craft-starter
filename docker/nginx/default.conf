# https://mattgrayisok.com/a-craft-cms-development-workflow-with-docker-part-1-local-development
# https://mattgrayisok.com/craft-cms-in-docker-https-ftw

server {

    listen 80; # http requests
    server_name localhost;

    # load project's own security headers
    include /etc/nginx/security-headers.conf;

    # location / {
    #     # redirect all incoming requests to https://
    #     return 301 https://$host$request_uri;
    # }

    root /var/www/html/web;
    index index.html index.php;
    charset utf-8;

    # Enable gzipping of server responses
    gzip              on;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_min_length   500;

    # Don't use gzip for Internet 1 to 6 which don't support it
    gzip_disable      "MSIE [1-6]\.";

    # Mime-types of files that should be gzipped by server
    # @note text/html is always included by default, no need to repeat it
    gzip_types      text/plain text/xml text/css
                    text/comma-separated-values
                    text/javascript
                    application/x-javascript
                    application/javascript
                    application/atom+xml;

    # Check request path against static files
    location / {
        # matches https://localhost/assets/main.css with /var/www/html/web/assets/main.css
        # matches https://localhost/articles with /var/www/html/web/articles/index.html
        try_files $uri $uri/ /index.php?$query_string;
    }

    access_log off;
    error_log  /var/log/nginx/error.log debug;

    sendfile off;

    # limit body of incoming HTTP request to 20MB
    client_max_body_size 20m;

    # Match against /**/*.php requests
    location ~ \.php$ {
        # Pass requests to php files to FastCGI (php-web container)
        include /etc/nginx/security-headers.conf;
        # load default FastCGI parameters provided by nginx
        include fastcgi_params;
        # read path info from request url
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        # forward requests to php-web service on port 900
        fastcgi_pass php-web:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_intercept_errors off;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        fastcgi_read_timeout 300;
    }

    # deny access for all requests starting with '.ht'
    location ~ /\.ht {
        include /etc/nginx/security-headers.conf;
        deny all;
    }
}

# server {

#     # use SSL and HTTP2
#     listen [::]:443 ssl http2; # https requests, ipv6
#     listen 443 default_server ssl http2; # https requests, ipv4
#     server_name localhost;

#     ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;
#     ssl_ciphers                ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:ECDHE-RSA-RC4-SHA:ECDHE-ECDSA-RC4-SHA:AES128:AES256:RC4-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK;
#     ssl_prefer_server_ciphers  on;

#     ssl_certificate      /etc/nginx/localhost.crt;
#     ssl_certificate_key  /etc/nginx/localhost.key;

#     include /etc/nginx/security-headers.conf;
# }
